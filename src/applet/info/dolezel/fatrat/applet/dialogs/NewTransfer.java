/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewTransfer.java
 *
 * Created on 14.12.2011, 21:20:05
 */
package info.dolezel.fatrat.applet.dialogs;

import info.dolezel.fatrat.applet.data.TransferClass;
import info.dolezel.fatrat.applet.models.QueueModel;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileFilter;
import org.apache.commons.io.IOUtils;

/**
 *
 * @author lubos
 */
public class NewTransfer extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    

    /** Creates new form NewTransfer */
    public NewTransfer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
        
        addWindowListener(new WindowAdapter() {
            @Override
             public void windowOpened(WindowEvent e) { 
                 jURLs.requestFocus(); 
             } 
         }); 
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupAddSpecial = new javax.swing.JPopupMenu();
        jAddLocalFile = new javax.swing.JMenuItem();
        jAddTextFile = new javax.swing.JMenuItem();
        jAddFromClipboard = new javax.swing.JMenuItem();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jQueue = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jURLs = new javax.swing.JTextArea();
        jAddSpecial = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTarget = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTransferClass = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSpeedDown = new javax.swing.JSpinner();
        jSpeedUp = new javax.swing.JSpinner();
        jAddPaused = new javax.swing.JCheckBox();

        jAddLocalFile.setText("Add local file...");
        jAddLocalFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddLocalFileActionPerformed(evt);
            }
        });
        jPopupAddSpecial.add(jAddLocalFile);

        jAddTextFile.setText("Add text file contents...");
        jAddTextFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddTextFileActionPerformed(evt);
            }
        });
        jPopupAddSpecial.add(jAddTextFile);

        jAddFromClipboard.setText("Add from clipboard");
        jAddFromClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddFromClipboardActionPerformed(evt);
            }
        });
        jPopupAddSpecial.add(jAddFromClipboard);

        setTitle("New transfer");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Queue:");

        jQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQueueActionPerformed(evt);
            }
        });

        jLabel2.setText("URLs:");

        jURLs.setColumns(20);
        jURLs.setRows(5);
        jScrollPane1.setViewportView(jURLs);

        jAddSpecial.setText("Add special");
        jAddSpecial.setFocusable(false);
        jAddSpecial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jAddSpecialMousePressed(evt);
            }
        });

        jLabel3.setText("Target:");

        jLabel4.setText("Download as:");

        jLabel5.setText("Max down speed (kB/s):");

        jLabel6.setText("Max up speed (kB/s):");

        jSpeedDown.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpeedUp.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jAddPaused.setText("Add paused");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jQueue, 0, 339, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAddSpecial))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSpeedUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpeedDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jAddPaused))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTransferClass, 0, 293, Short.MAX_VALUE)
                            .addComponent(jTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jQueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jAddSpecial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransferClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSpeedDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddPaused))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpeedUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void jAddSpecialMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddSpecialMousePressed
        jPopupAddSpecial.show(evt.getComponent(), evt.getX(), evt.getY());
    }//GEN-LAST:event_jAddSpecialMousePressed

    private void jAddFromClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddFromClipboardActionPerformed
        try {
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Transferable tr = clipboard.getContents(this);
        
            String data = (String) tr.getTransferData(DataFlavor.stringFlavor);
            jURLs.setText(data);
        } catch (Exception e) {
            jURLs.setText("");
        }
    }//GEN-LAST:event_jAddFromClipboardActionPerformed

    private static void autoAppendText(JTextArea area, String text) {
        String origText = area.getText();
        if (origText != null && !origText.isEmpty() && !origText.endsWith("\n"))
            text = "\n" + text;
        area.append(text);
    }
    
    private void jAddLocalFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddLocalFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        File selFile;
        
        if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION)
            return;
        
        selFile = chooser.getSelectedFile();
        if (selFile.length() > 1024*1024) {
            JOptionPane.showMessageDialog(this, "The file is too big. This feature is not designed for file upload.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            autoAppendText(jURLs, "local://" + selFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jAddLocalFileActionPerformed

    private void jAddTextFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddTextFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        File selFile;
        
        chooser.addChoosableFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                return f.getName().toLowerCase().endsWith(".txt");
            }

            @Override
            public String getDescription() {
                return "Text files (*.txt)";
            }
        });
        
        if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION)
            return;
        
        selFile = chooser.getSelectedFile();
        
        try {
            String text = IOUtils.toString(new FileReader(selFile));
            autoAppendText(jURLs, text);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jAddTextFileActionPerformed

    private void jQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQueueActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        QueueItem item = (QueueItem) cb.getSelectedItem();
        
        jTarget.setText(item.getDefaultDirectory());
    }//GEN-LAST:event_jQueueActionPerformed
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    public void setQueueModel(QueueModel m) {
        for (Object data : m.getData()) {
            Map<String,Object> map = (Map<String,Object>) data;
            
            jQueue.addItem(new QueueItem((String) map.get("name"), (String) map.get("uuid"), (String) map.get("defaultDirectory")));
        }
    }
    
    public void setTransferClasses(TransferClass[] cls) {
        jTransferClass.addItem(new TransferClass("Detect automatically"));
        for (TransferClass c : cls) {
            if (c.getMode().equals("Download"))
                jTransferClass.addItem(c);
        }
    }
    
    public String[] getURLs() {
        return jURLs.getText().split("\\s+");
    }
    
    public String getQueueUUID() {
        return ((QueueItem) jQueue.getSelectedItem()).getUuid();
    }
    
    public String getTransferClass() {
        String c = ((TransferClass) jTransferClass.getSelectedItem()).getShortName();
        if (c == null)
            return "";
        else
            return c;
    }
    
    public String getTargetDirectory() {
        return jTarget.getText();
    }
    
    public boolean addPaused() {
        return jAddPaused.isSelected();
    }
    
    public int getDownSpeedLimit() {
        return ((Number) jSpeedDown.getValue()).intValue();
    }
    
    public int getUpSpeedLimit() {
        return ((Number) jSpeedUp.getValue()).intValue();
    }
    
    private static class QueueItem {
        String name, uuid, defaultDirectory;

        public QueueItem(String name, String uuid, String defaultDirectory) {
            this.name = name;
            this.uuid = uuid;
            this.defaultDirectory = defaultDirectory;
        }

        public String getName() {
            return name;
        }

        public String getUuid() {
            return uuid;
        }

        public String getDefaultDirectory() {
            return defaultDirectory;
        }

        @Override
        public String toString() {
            return name;
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JMenuItem jAddFromClipboard;
    private javax.swing.JMenuItem jAddLocalFile;
    private javax.swing.JCheckBox jAddPaused;
    private javax.swing.JButton jAddSpecial;
    private javax.swing.JMenuItem jAddTextFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPopupMenu jPopupAddSpecial;
    private javax.swing.JComboBox jQueue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpeedDown;
    private javax.swing.JSpinner jSpeedUp;
    private javax.swing.JTextField jTarget;
    private javax.swing.JComboBox jTransferClass;
    private javax.swing.JTextArea jURLs;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
